{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Documents\\\\GitHub\\\\spotify\\\\auto-spot-app\\\\src\\\\pages\\\\MusicSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  btn: {\n    backgroundColor: 'green'\n  },\n  text: {\n    color: 'white'\n  },\n  input_text: {\n    color: '#1111FF'\n  },\n  field: {\n    display: 'flex',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  container: {\n    display: 'flex'\n  }\n}); // Currently Displays Two Buttons and 1 text field. \n// When submitting artist name in the text field, the name will appear on the console.\n\nexport default function PlaylistCreate() {\n  _s();\n\n  const classes = useStyles();\n  const [artist, setArtist] = useState('');\n\n  const handleSearch = e => {\n    e.preventDefault();\n\n    if (artist) {\n      console.log(artist);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BuckingFroncos : Playlist Creator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => console.log(\"You Clicked Me!\"),\n        variant: \"contained\",\n        className: classes.btn,\n        color: \"primary\",\n        type: \"submit\",\n        fullwidth: \"true\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineRoundedIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.text,\n          children: \"Create a New Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"on\",\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          inputProps: {\n            className: classes.input_text\n          },\n          onChange: e => setArtist(e.target.value),\n          className: classes.field,\n          label: \"Artist Name\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          autofocus: \"true\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          color: \"secondary\",\n          startIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            color: \"Primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.text,\n            children: \"Search for Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlaylistCreate, \"yi6GmZXulcXSI6edIOPZgZTAUx0=\", false, function () {\n  return [useStyles];\n});\n\n_c = PlaylistCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCreate\");","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/spotify/auto-spot-app/src/pages/MusicSearch.js"],"names":["React","useState","Typography","Button","AddCircleOutlineRoundedIcon","SearchIcon","Container","makeStyles","TextField","useStyles","btn","backgroundColor","text","color","input_text","field","display","marginTop","marginBottom","container","PlaylistCreate","classes","artist","setArtist","handleSearch","e","preventDefault","console","log","className","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    btn: {\r\n        backgroundColor: 'green'\r\n    },\r\n    text: {\r\n        color: 'white'\r\n    },\r\n    input_text: {\r\n        color: '#1111FF'\r\n    },\r\n    field: {\r\n        display: 'flex',\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n    },\r\n\r\n    container: {\r\n        display: 'flex'\r\n    }\r\n\r\n})\r\n\r\n// Currently Displays Two Buttons and 1 text field. \r\n// When submitting artist name in the text field, the name will appear on the console.\r\nexport default function PlaylistCreate() {\r\n    const classes = useStyles()\r\n    const [artist, setArtist] = useState('')\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (artist) {\r\n            console.log(artist)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <h1>BuckingFroncos : Playlist Creator</h1>\r\n        <Container>\r\n            <Button\r\n                onClick= {() => console.log(\"You Clicked Me!\")}\r\n                variant='contained'\r\n                className={classes.btn}\r\n                color=\"primary\"\r\n                type=\"submit\" \r\n                fullwidth = 'true'\r\n                startIcon = {<AddCircleOutlineRoundedIcon fontSize='large' />}>\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    className={classes.text}>\r\n                    Create a New Playlist\r\n                </Typography>\r\n            </Button>\r\n\r\n            <form noValidate autoComplete='on' onSubmit={handleSearch}>\r\n                <TextField \r\n                    inputProps = {{className: classes.input_text}}\r\n                    onChange={(e) => setArtist(e.target.value)}\r\n                    className={classes.field}\r\n                    label=\"Artist Name\"\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    autofocus = 'true'\r\n                    required>\r\n                </TextField>\r\n\r\n\r\n                <Button\r\n                variant='contained'\r\n                type=\"submit\" \r\n                color='secondary'\r\n                startIcon = {<SearchIcon color=\"Primary\"></SearchIcon>}>\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    className={classes.text}>\r\n                    Search for Artist\r\n                </Typography>\r\n            </Button>\r\n            </form>\r\n            {/* May Use Select prop of text field for genre and year */}\r\n        </Container>\r\n        </div>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}